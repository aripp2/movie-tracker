{"version":3,"sources":["utils/apiCalls.js","actions/index.js","Containers/MovieCard/MovieCard.js","Containers/MoviesContainer/MoviesContainer.js","Components/CardDetails/CardDetails.js","Containers/CreateAccount/CreateAccount.js","Containers/LoginForm/LoginForm.js","Containers/Header/Header.js","Containers/App/App.js","reducers/favorites.js","reducers/index.js","reducers/movies.js","reducers/errorMsg.js","reducers/user.js","index.js"],"names":["fetchMovies","a","url","fetch","response","ok","Error","json","movies","results","map","movie","backdrop_path","genre_ids","id","overview","poster_path","release_date","title","vote_average","isFavorite","postUser","user","options","method","body","JSON","stringify","email","password","headers","status","foundUser","addUser","name","newUser","addFavorite","userId","movie_id","addedFav","getFavorites","favoriteMovies","removeFavorite","favId","setUser","type","toggleFav","setFavs","favs","connect","dispatch","date","poster","refreshFavs","fixedDate","Date","toString","split","slice","join","favStatus","toggleFavColor","className","disabled","onClick","to","src","alt","favorites","viewAll","makeCards","key","vote","releaseDate","CreateAccount","handleChange","e","setState","target","value","createAccount","error","state","success","message","clearInputs","this","placeholder","onChange","Component","LoginForm","submitUser","props","updateFavs","clearFavs","App","throwError","updatedFavs","addMovies","errorMsg","basename","exact","path","render","match","foundMovie","find","parseInt","params","rootReducer","combineReducers","action","forEach","fav","store","createStore","composeWithDevTools","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f6c93381.chunk.js","sourcesContent":["const baseUrl = 'https://api.themoviedb.org/3/movie/now_playing?';\n// const apiKey = '1b20ae1afe685b2871c8d94218f89eba';\nconst apiKey2 = 'cee1e60becdb4297de68233fbef2f560';\n\nexport const fetchMovies = async () => {\n  const url = `${baseUrl}api_key=${apiKey2}&language=en-US`\n  const response = await fetch(url)\n    if (!response.ok) {\n      throw Error(\"There was an issue retrieving your movies. Please try again.\");\n    }\n  let movies = await response.json();\n  movies = movies.results.map(movie => {\n    const { backdrop_path, genre_ids, id, overview, poster_path, release_date, title, vote_average } = movie\n    return { backdrop_path, genre_ids, id, overview, poster_path, release_date, title, vote_average, isFavorite: false }\n  })\n  return movies\n};\n\nexport const postUser = async user => {\n  const url = 'http://localhost:3001/api/v1/login';\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      email: user.email,\n      password: user.password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const response = await fetch(url, options);\n  if (!response.ok && response.status !== 401) {\n    throw Error('Sorry, unable to retrieve your account. Try again later.')\n  }\n  const foundUser = await response.json();\n  if (response.status === 401) {\n    throw new Error('Username or password incorrect')\n  }\n  return foundUser;\n}\n\nexport const addUser = async user => {\n  const url = 'http://localhost:3001/api/v1/users';\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      name: user.name,\n      email: user.email,\n      password: user.password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const response = await fetch(url, options);\n    if (!response.ok && response.status !== 500) {\n     throw Error('Sorry, unable to create your account. Try again later.')\n  }\n  const newUser = await response.json();\n    if (response.status === 500) {\n      throw new Error('There is already an account with this email. Go to login or use another email address.')\n  }\n  return newUser;\n}\n\nexport const addFavorite = async (userId, movie) => {\n  const url = `http://localhost:3001/api/v1/users/${userId}/moviefavorites`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      movie_id: movie.id, \n      title: movie.title, \n      poster_path: movie.poster_path, \n      release_date: movie.release_date, \n      vote_average: movie.vote_average, \n      overview: movie.overview\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const response = await fetch(url, options)\n  if(!response.ok) {\n    throw Error('Unable to add movie as favorite. Try again later.')\n  }\n  const addedFav = await response.json();\n  return addedFav;\n}\n\nexport const getFavorites = async userId => {\n  const url = `http://localhost:3001/api/v1/users/${userId}/moviefavorites`;\n  const response = await fetch(url)\n  if(!response.ok) {\n    throw Error('Unable to retrieve your favorite movies as this time. Please try again later')\n  }\n  const favoriteMovies = await response.json()\n  return favoriteMovies\n}\n\nexport const removeFavorite = async (userId, favId) => {\n  const url = `http://localhost:3001/api/v1/users/${userId}/moviefavorites/${favId}`;\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n  const response = await fetch(url, options)\n  if(!response.ok) {\n    throw Error('Unable to remove this movie as a favorite at this time. Please try again later')\n  }\n}\n\n\n","export const addMovies = movies => ({\n\ttype: 'ADD_MOVIES',\n\tmovies\n});\n\nexport const throwError = errorMsg => ({\n  type: 'THROW_ERROR',\n  errorMsg\n});\n\nexport const setUser = user => ({\n\ttype: 'SET_USER',\n\tuser\n});\n\nexport const toggleFav = id => ({\n\ttype: 'TOGGLE_FAV',\n\tid\n});\n\nexport const setFavs = favs => ({\n  type: 'SET_FAVS',\n  favs\n});\n\nexport const updateFavs = favs => ({\n  type: 'UPDATE_FAVS',\n  favs\n});\n\nexport const clearFavs = () => ({\n  type: 'CLEAR_FAVS',\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleFav } from '../../actions';\nimport  './MovieCard.scss';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ id, title, date, poster, movie, isFavorite, toggleFav, user, refreshFavs }) => {\n\n  const fixedDate = new Date(date + 'T00:00').toString().split(' ').slice(1, 4).join(' ');\n\n  const favStatus = isFavorite ? 'Remove Favorite' : 'Add Favorite';\n  const toggleFavColor = isFavorite ? 'favorited' : '';\n  return (\n    <article className='movie-card' id={id}>\n      <div className='movie-details'>\n        <h2>{title}</h2>\n        <h3>{fixedDate}</h3>\n        <button \n          className={`fav-btn ${toggleFavColor}`}\n          type=\"button\"\n          disabled={!user}\n          onClick={() => {\n            toggleFav(id);\n            refreshFavs(movie);\n          }}\n        >{favStatus}</button>\n      </div>\n      <Link to={`/movies/${id}`}>\n        <img \n          className='poster'\n          src={`http://image.tmdb.org/t/p/w1280${poster}`} \n          alt=\"Movie poster\" \n        />\n      </Link>\n    </article>\n  )\n}\n\nexport const mapStateToProps = ({ user }) => ({\n  user\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  toggleFav: id => dispatch(toggleFav(id)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieCard);\n\n\nMovieCard.propTypes = {\n  // id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n  toggleFav: PropTypes.func.isRequired,\n  // movie: PropTypes.object.isRequired,\n  user: PropTypes.object\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport  MovieCard from '../MovieCard/MovieCard';\nimport './MoviesContainer.scss';\n\nconst MoviesContainer = ({ viewAll, movies, favorites, refreshFavs }) => {\n  const view = viewAll ? movies : favorites;\n  const makeCards = view.map(\n    movie => {\n    return <MovieCard \n      key={movie.id}\n      id={movie.id}\n      title={movie.title}\n      date={movie.release_date}\n      poster={movie.poster_path}\n      vote={movie.vote_average}\n      overview={movie.overview}\n      isFavorite={movie.isFavorite}\n      movie={movie}\n      refreshFavs={refreshFavs}\n    />\n  })\n  return (\n    <section className='movie-container'>\n      {makeCards}\n    </section>\n    )\n}\n\nconst mapStateToProps = ({ movies, favorites }) => ({\n  movies,\n  favorites\n})\n\nexport default connect(mapStateToProps)(MoviesContainer);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toggleFav } from '../../actions';\nimport './CardDetails.scss';\nimport PropTypes from 'prop-types';\n\nexport const CardDetails = ({ movie, refreshFavs, user, toggleFav }) => {\n  const {backdrop_path, id, isFavorite, overview, poster_path, release_date, title, vote_average} = movie;\n\n  const releaseDate = new Date(release_date + 'T00:00').toString().split(' ').slice(1, 4).join(' ');\n\n  const favStatus = isFavorite ? 'Remove Favorite' : 'Add Favorite';\n\n  return (\n    <section className=\"cardDetails\">\n      <img \n        className='movie-backdrop' \n        src={`http://image.tmdb.org/t/p/w1280${backdrop_path}`} \n        alt='movie backdrop' \n      />\n      <article className='movie-details-wrapper'>\n        <img \n          className='movie-poster' \n          src={`http://image.tmdb.org/t/p/w1280${poster_path}`} \n          alt='movie poster' \n        />\n        <div className='movie-info-wrapper'>\n          <h1 className='movie-title'>{title}</h1>\n          <h2>Released: {releaseDate}</h2>\n          <p>{overview}</p>\n          <h2>Vote Average: {vote_average}</h2>\n          <button \n            className='fav-btn-wrapper' \n            type=\"button\"\n            disabled={!user}\n            onClick={() => {\n              toggleFav(id);\n              refreshFavs(movie);\n            }}\n          >{favStatus}</button>\n          <Link to='/'>\n            <button \n              className='back-btn' \n              type='button'\n            >◀ back</button>\n          </Link>\n        </div>\n      </article>\n    </section>\n  )\n}\n\nexport const mapStateToProps = ({ user }) => ({\n  user\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  toggleFav: id => dispatch(toggleFav(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDetails);\n\nCardDetails.propTypes = {\n  movie: PropTypes.object,\n  refreshFavs: PropTypes.func,\n  toggleFavs: PropTypes.func,\n  user: PropTypes.object\n}","import React, { Component } from 'react';\nimport {  Redirect } from 'react-router-dom';\nimport { addUser } from '../../utils/apiCalls';\nimport './CreateAccount.scss';\n\n\nclass CreateAccount extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      error: '',\n      success: false\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  createAccount = async (e) => {\n    this.setState({ error: '' })\n    try{\n      await addUser(this.state)\n      this.setState({ success: true })\n    } catch({ message }) {\n      this.setState({ error: message })\n    }\n    this.clearInputs()\n  }\n\n  clearInputs = () => {\n    this.setState({ name: '', email: '', password:''})\n  }\n\n  render() {\n    if(this.state.success) {\n      return <Redirect to='/login' />\n    }\n    return (\n      <section className='form-section'>\n        {this.state.error && <h2 className='error-msg'>{this.state.error}</h2>}\n        <form className='create-account-form'>\n          <h2 className='create-account-h2'>Create Account: </h2>\n          <input \n            type='text' \n            placeholder='Enter Name'\n            name='name'\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n          <input \n            type='text' \n            placeholder='Enter Email'\n            name='email'\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n          <input \n            type='text'  \n            placeholder='Enter Password'\n            name='password'\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <button \n            className='login-btn' \n            type='button'\n            disabled={!this.state.name || !this.state.email || !this.state.password}\n            onClick={this.createAccount} \n          >Create Account</button>\n        </form>\n      </section>\n    )\n  }\n}\n\nexport default CreateAccount;","import React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postUser, getFavorites } from '../../utils/apiCalls';\nimport { setUser, setFavs, updateFavs } from '../../actions';\nimport './LoginForm.scss';\n\n\nexport class LoginForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      error: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  submitUser = async (e) => {\n    this.setState({ error: '' })\n    const { setUser, setFavs, updateFavs } = this.props\n    try {\n      const foundUser = await postUser(this.state)\n      const favs = await getFavorites(foundUser.id)\n      setFavs(favs)\n      updateFavs(favs)\n      setUser(foundUser)\n    } catch({ message }){\n      this.setState({ error: message })\n    }\n    this.clearInputs()\n  }   \n\n  clearInputs = () => {\n    this.setState({ email: '', password:''})\n  }\n\n  render() {\n    if (this.props.user) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <section className='form-section'>\n        <form>\n          {this.state.error && <h2 className='error-msg'>{this.state.error}</h2>}\n          <input \n            type='text' \n            placeholder='Enter Email'\n            name='email'\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n          <input \n            type='text'  \n            placeholder='Enter Password'\n            name='password'\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <button \n            className='login-btn' \n            type='button'\n            disabled={!this.state.email || !this.state.password} \n            onClick={this.submitUser}\n          >Login</button>\n          <Link to='/createaccount'>\n            <button \n              className='create-account-btn' \n              type='button' \n            >Create Account</button>\n          </Link>\n        </form>\n      </section>\n    )\n  } \n}\n\nexport const mapStateToProps = ({ user }) => ({\n  user\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  setUser: user => dispatch(setUser(user)),\n  setFavs: favs => dispatch(setFavs(favs)),\n  updateFavs: favs => dispatch(updateFavs(favs))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setUser, clearFavs } from '../../actions';\n\nimport './Header.scss';\n\nconst Header = ({ user, setUser, clearFavs, favorites }) => {\n  return (\n    <header>\n      <h1 className='header-title'>Movie Tracker</h1>\n      <div className='header-btn-wrapper'>\n        {user !== null && <h2>Welcome {user.name}</h2>}\n        <Link to='/favorites'>\n          <button \n            className='view-favs nav-btn'\n            disabled={!user}\n          >View Favorites</button>\n        </Link>\n        <Link to='/login'>\n          <button \n            className='login nav-btn'\n            disabled={user}\n            >Login</button>\n          </Link>\n        <Link to='/createaccount'>\n          <button \n            className='create nav-btn'\n            disabled={user}\n            >Create Account</button>\n        </Link>\n        <Link to='/' onClick={() => {\n              setUser(null);\n              clearFavs();\n            }}>\n          <button \n            className='signout nav-btn'\n            disabled={!user}\n          >Sign Out</button>\n        </Link>\n        <Link to='/'>\n          <button \n            className='home nav-btn'\n          >Back to All Movies</button>\n        </Link>\n      </div>\n    </header>\n  )\n}\n\nconst mapStateToProps = ({ user, favorites }) => ({\n  user, \n  favorites\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setUser: user => dispatch(setUser(user)),\n  clearFavs: () => dispatch(clearFavs())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies, getFavorites, addFavorite, removeFavorite } from '../../utils/apiCalls';\nimport { addMovies, throwError, setFavs } from '../../actions';\nimport MoviesContainer from '../MoviesContainer/MoviesContainer';\nimport CardDetails from '../../Components/CardDetails/CardDetails';\nimport CreateAccount from '../CreateAccount/CreateAccount'\nimport LoginForm from '../LoginForm/LoginForm';\nimport Header from '../Header/Header';\nimport './App.scss';\n\nexport class App extends Component {\n\n  async componentDidMount() {\n    const { addMovies, throwError } = this.props\n    try {\n      const movies = await fetchMovies();\n      addMovies(movies)\n    } catch({ message }) {\n      throwError(message)\n    }\n  }\n\n  refreshFavs = async (movie) => {\n    const { throwError, setFavs, user } = this.props;\n    try {\n      if (movie.isFavorite) {\n        await removeFavorite(user.id, movie.id)\n      } else {\n        await addFavorite(user.id, movie)\n      }\n        const updatedFavs = await getFavorites(user.id)\n        setFavs(updatedFavs)\n      } catch ({ message }) {\n        throwError(message)\n      }\n  } \n\n  render() {\n    const { errorMsg } = this.props\n    return (\n      <HashRouter basename='/'>\n        <div className=\"App\">\n          <Header />\n          {errorMsg && <h2>{errorMsg}</h2>}\n            <Route exact path='/' render={() => <MoviesContainer viewAll={true} refreshFavs={this.refreshFavs}/>}/>\n            <Route exact path='/login' \n            render={() => <LoginForm />} />\n            <Route exact path='/createaccount' \n            render={() => <CreateAccount />} />\n            <Route exact path='/favorites' render={() => <MoviesContainer viewAll={false} refreshFavs={this.refreshFavs}/>}/>\n            <Route\n              path=\"/movies/:id\"\n              render={({ match }) => {\n                let foundMovie = this.props.movies.find(movie => {\n                  return movie.id === parseInt(match.params.id);\n                });\n                return (\n                  <CardDetails\n                    key={foundMovie.id}\n                    movie={foundMovie}\n                    refreshFavs={this.refreshFavs}\n                />\n              );\n            }}\n          />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport const mapStateToProps = ({ errorMsg, user, movies }) => ({\n  errorMsg,\n  user,\n  movies\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  addMovies: movies => dispatch(addMovies(movies)),\n  throwError: errorMsg => dispatch(throwError(errorMsg)),\n  setFavs: favs => dispatch(setFavs(favs)) \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const favorites = (state=[], action) => {\n  switch (action.type) {\n    case 'SET_FAVS': \n      return action.favs.favorites.map(movie => {\n        movie.id = movie.movie_id\n        return {...movie, isFavorite: true}\n      })\n    case 'CLEAR_FAVS':\n        return []\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { movies } from './movies';\nimport { errorMsg } from './errorMsg';\nimport { user } from './user';\nimport { favorites } from './favorites';\n\nexport const rootReducer = combineReducers({\n  movies,\n  errorMsg,\n  user,\n  favorites\n});","export const movies = (state=[], action) => {\n  switch (action.type) {\n    case 'ADD_MOVIES':\n      return action.movies\n    case 'TOGGLE_FAV':\n      return state.map(movie => {\n        if (movie.id === action.id) {\n          return {...movie, isFavorite: !movie.isFavorite}\n        } else {\n          return movie\n        }\n      })\n    case 'UPDATE_FAVS':\n      return state.map(movie => {\n        action.favs.favorites.forEach(fav => {\n          if(fav.movie_id === movie.id) {\n            movie.isFavorite = true;\n          }\n        })\n          return movie;\n      })\n    default:\n      return state;\n  }\n}","export const errorMsg = (state='', action) => {\n  switch (action.type) {\n    case 'THROW_ERROR':\n      return action.errorMsg\n    default:\n      return state;\n  }\n}","export const user = (state = null, action) => {\n  switch(action.type) {\n    case 'SET_USER':\n      return action.user\n    default: \n      return state\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './Containers/App/App';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './reducers';\nimport { BrowserRouter } from 'react-router-dom'\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(\n<Provider store={store}>\n  {router}\n</Provider>,\ndocument.getElementById('root'));\n\n"],"sourceRoot":""}